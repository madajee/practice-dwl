1. Transform customers object that is an array of field/value pair of customer attributes into array of customer object using map(), mapobject() and use the upper() so that keys of customer attribute are in uppercase.
2. Transform customers object into customergroup for a region using groupBy() on region. Each customergroup object should have a customers object which should list customers in that region identified by customer name.
3. Tranform customers so that orders for each customer formats orderDate (MM-dd-uuuu to dd-MMM-uuuu) and orderTotal (as {format: "$sign###.00"})
4. Filter customer orders that have order type, and then rename orderDate as deliveryDate for web order type.
5. Transform customers object that is an array of field/value pair of customer attributes into customer object with fields as name, region and ordertotal in uppercase and ordertotal is sum of orderTotal of all orders for a customer. Use the reduce() to accumulate the ordertotal.
6. Transform customers object into array of customer object and join the name and region to create a customerdesc. Use pluck() and joinBy().
7. Transform customers object into a customers xml.
8. Extract the orders for all the customers from customer object into an array of order object. Add customer name in the each order object.
9. Extract the orders for all the customers from customer object into list of order element with root element as orders in an XML. Just like in learndwl_8.dwl, Add customer name in the each order object.
10. Transform customers object into an object that specifies orderTotal rolling up for each customer with key being the name.